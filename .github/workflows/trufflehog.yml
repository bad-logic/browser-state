name: Scan for leaked secrets

on:
  pull_request:
    types: [opened, synchronize, reopened]


permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  trufflehog-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scanning
        id: trufflehog
        continue-on-error: true
        env:
          VERSION: 3.89.2
          ARGS: --results=verified,unknown --json --debug
        run: |
          # Check if jq is installed, if not, install it
          if ! command -v jq &> /dev/null
          then
            echo "jq could not be found, installing..."
            apt-get -y update && apt-get install -y jq
          fi
          
          git status >/dev/null  # make sure we are in a git repository

          ##########################################
          ##          Run TruffleHog              ##
          ##########################################

          docker run --rm -v "${{ github.workspace }}:/tmp" -w /tmp \
          ghcr.io/trufflesecurity/trufflehog:$VERSION \
          git file:///tmp \
          --branch "$GITHUB_HEAD_REF" \
          --github-actions \
          --no-update \
          $ARGS > $GITHUB_WORKSPACE/trufflehog_results.txt

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const filePath = path.join(process.env.GITHUB_WORKSPACE, 'trufflehog_results.txt');
            const summary = fs.existsSync(filePath) ? fs.readFileSync(filePath, 'utf8');
            const noSecBody= `‚úÖ **TruffleHog scan passed.**\n\nNo potential secrets were found in this pull request.`;
            const secBody = `üîê **TruffleHog scan found potential secrets in this pull request.**\n\nPlease review and remediate sensitive data if necessary.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ``\`\`json\n${summary}\n\`\`\``
            });

      - name: Result
        if: steps.trufflehog.outcome=='failure'
        run: exit 1
