name: Scan for leaked secrets

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]


permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  trufflehog-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scanning
        id: trufflehog
        # uses: trufflesecurity/trufflehog@main
        continue-on-error: true
        shell: bash
        working-directory: ${{ inputs.path }}
        env:
          BASE: ${{ inputs.base }}
          HEAD: ${{ inputs.head }}
          ARGS: ${{ inputs.extra_args }}
          COMMIT_IDS: ${{ toJson(github.event.commits.*.id) }}
          VERSION: ${{ inputs.version }}
        # with:
        #   path: ./ 
        #   base: "${{ github.event.repository.default_branch }}" 
        #   head: HEAD 
        #   extra_args: --debug > trufflehog_results.txt
        run: |
          ##########################################
          ## ADVANCED USAGE                       ##
          ## Scan by BASE & HEAD user inputs      ##
          ## If BASE == HEAD, exit with error     ##
          ##########################################
          # Check if jq is installed, if not, install it
          if ! command -v jq &> /dev/null
          then
            echo "jq could not be found, installing..."
            apt-get -y update && apt-get install -y jq
          fi
          
          git status >/dev/null  # make sure we are in a git repository
          if [ -n "$BASE" ] || [ -n "$HEAD" ]; then
            if [ -n "$BASE" ]; then
              base_commit=$(git rev-parse "$BASE" 2>/dev/null) || true
            else
              base_commit=""
            fi
            if [ -n "$HEAD" ]; then
              head_commit=$(git rev-parse "$HEAD" 2>/dev/null) || true
            else
              head_commit=""
            fi
            if [ "$base_commit" == "$head_commit" ] ; then
              echo "::error::BASE and HEAD commits are the same. TruffleHog won't scan anything. Please see documentation (https://github.com/trufflesecurity/trufflehog#octocat-trufflehog-github-action)."
              exit 1
            fi
            ##########################################
            ## Scan commits based on event type     ##
            ##########################################
            else
              if [ "${{ github.event_name }}" == "push" ]; then
                COMMIT_LENGTH=$(printenv COMMIT_IDS | jq length)
                if [ $COMMIT_LENGTH == "0" ]; then
                  echo "No commits to scan"
                  exit 0
                fi
                HEAD=${{ github.event.after }}
                if [ ${{ github.event.before }} == "0000000000000000000000000000000000000000" ]; then
                  BASE=""
                else
                  BASE=${{ github.event.before }}
                fi
              elif [ "${{ github.event_name }}" == "workflow_dispatch" ] || [ "${{ github.event_name }}" == "schedule" ]; then
                BASE=""
                HEAD=""
              elif [ "${{ github.event_name }}" == "pull_request" ]; then
                BASE=${{github.event.pull_request.base.sha}}
                HEAD=${{github.event.pull_request.head.sha}}
              fi
            fi
            ##########################################
            ##          Run TruffleHog              ##
            ##########################################

            docker run --rm -v "${{ github.workspace }}:/tmp" -w /tmp \
            ghcr.io/trufflesecurity/trufflehog:$VERSION \
            git file:///tmp \
            ${BASE:+--since-commit $BASE} \
            ${HEAD:+--branch $HEAD} \
            --github-actions \
            --no-update \
            $ARGS > $GITHUB_WORKSPACE/trufflehog_results.json || true

      - name: Comment on PR - Secrets Found
        if: ${{ github.event_name == 'pull_request' && steps.trufflehog.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync(trufflehog_results.json, 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üîê **TruffleHog scan found potential secrets in this pull request.**\n\nPlease review and remediate sensitive data if necessary.\n\n${summary}`
            });

      - name: Comment on PR - No Secrets Found
        if: ${{ github.event_name == 'pull_request' && steps.trufflehog.outcome != 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚úÖ **TruffleHog scan passed.**\n\nNo potential secrets were found in this pull request.`
            });

      - name: Result
        if: steps.trufflehog.outcome=='failure'
        run: exit 1
