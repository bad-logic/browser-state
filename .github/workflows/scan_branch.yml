name: Scan Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]


permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  trufflehog-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scanning
        continue-on-error: true
        env:
          VERSION: 3.89.2
          ARGS: --results=verified,unknown --json --debug
        run: | 
          git status >/dev/null  # make sure we are in a git repository

          ##########################################
          ##          Run TruffleHog              ##
          ##########################################

          docker run --rm -v "${{ github.workspace }}:/tmp" -w /tmp \
          ghcr.io/trufflesecurity/trufflehog:$VERSION \
          git file:///tmp \
          --branch "$GITHUB_HEAD_REF" \
          --github-actions \
          --no-update \
          $ARGS > $GITHUB_WORKSPACE/trufflehog_results.json

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const filePath = path.join(process.env.GITHUB_WORKSPACE, 'trufflehog_results.json');
            let body;
            if (fs.existsSync(filePath)) {
              const data = fs.readFileSync(filePath, 'utf8').trim();
              const results = data.split('\n')
                .map(line => line.trim())
                .filter(Boolean)
                .map(JSON.parse);

              if (results.length === 0) {
                body = `‚úÖ **TruffleHog scan passed.**\n\nNo potential secrets were found in ${process.env.GITHUB_HEAD_REF} Branch.`;
              } else {
                body = `üîê **TruffleHog scan found potential secrets in ${process.env.GITHUB_HEAD_REF} Branch.**\n\nTotal: **${results.length}** findings\n\n`;

                for (const result of results) {
                  const git = result.SourceMetadata?.Data?.Git || {};
                  const extra = result.ExtraData || {};

                  body += `- **File:** \`${git.file}\` (Line ${git.line})  
                  **Commit:** [\`${git.commit.substring(0, 7)}\`](https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${git.commit})  
                  **Email:** ${git.email}  
                  **Secret Type:** ${result.DetectorName}  
                  **Raw Value (Redacted):** \`${result.Redacted}\`  
                  **ARN:** \`${extra.arn || 'N/A'}\`  
                  **Rotation Guide:** [Link](${extra.rotation_guide || '#'})\n`;
                }
              }
            } else {
              body = '‚ö†Ô∏è **TruffleHog scan could not produce any results for ${process.env.GITHUB_HEAD_REF} Branch.';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Result
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          file=$(cat "$GITHUB_WORKSPACE/trufflehog_results.json");
          echo "$file"
          if [ -z "$file" ]; then
            echo "file is empty"
          else
            echo "file is not empty"
            exit 1
          fi
